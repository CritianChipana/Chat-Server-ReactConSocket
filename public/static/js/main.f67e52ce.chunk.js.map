{"version":3,"sources":["types/types.jsx","context/chat/chatReducer.jsx","context/chat/ChatContext.jsx","helpers/fetch.jsx","auth/AuthContext.jsx","context/SocketContext.jsx","hooks/useSocket.jsx","helpers/scrollToBottom.jsx","components/ChatSelect.jsx","components/SearchBox.jsx","components/SideBarChatItem.jsx","components/SideBar.jsx","components/InboxPeople.jsx","helpers/horaMes.jsx","components/IncomingMessage.jsx","components/OutgoingMessage.jsx","components/SendMessage.jsx","components/Messages.jsx","pages/ChatPage.jsx","pages/LoginPage.jsx","pages/RegisterPage.jsx","router/AuthRouter.jsx","router/PrivateRoute.jsx","router/PublicRouter.jsx","router/AppRouter.jsx","ChatApp.jsx","index.js"],"names":["types","chatReducer","state","action","type","usuarios","payload","chatActivo","mensajes","de","para","uid","ChatContext","createContext","initialState","ChatProvider","children","useReducer","chatState","dispatch","Provider","value","baseUrl","process","REACT_APP_API_URL","fetchSinToken","endpoint","data","a","method","url","fetch","resp","json","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","AuthContext","checking","logged","name","email","AuthProvider","useState","auth","setAuth","useContext","login","password","ok","setItem","usuarioDB","nombre","console","log","register","usuario","msg","verificaToken","useCallback","logout","removeItem","SocketContext","SocketProvider","serverPath","socket","setSocket","online","setOnline","conectarSocket","socketTemp","io","connect","transports","autoConnect","forceNew","query","desconectarSocket","disconnect","useEffect","connected","on","useSocket","mensaje","id","animateScroll","scrollToBottom","containerId","duration","ChatSelect","className","SearchBox","onClick","SideBarChatItem","handleOnClick","src","alt","SideBar","filter","user","map","InboxPeople","horaMes","fecha","moment","format","IncomingMessage","horaEnvio","createdAt","OutgoingMessage","SendMessage","setMensaje","onSubmit","e","preventDefault","length","emit","placeholder","onChange","target","Messages","_id","ChatPage","LoginPage","rememberme","form","setForm","handleOnChange","handelonSubmit","ev","Swal","fire","checked","readOnly","to","disabled","RegisterPage","handleOnSumbit","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRouter","AppRouter","locale","ChatApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f67e52ce.chunk.js","sourcesContent":["\r\n\r\nexport const types = {\r\n\r\n    usuariosCargados: '[Chat] Usuarios cargados',\r\n    activarChat:'[Chat] Activar Chat',\r\n    nuevoMensaje : '[Chat] Nuevo Mensaje',\r\n    cargarMnesaje : '[Chat] Cargar Mensajes',\r\n    cerrarSession : \"[Chat] Cerrar Session\",\r\n    \r\n}","import { types } from \"../../types/types\";\r\n\r\nexport const chatReducer = ( state  , action ) =>{\r\n\r\n    // const initialState = {\r\n    //     uid:'',\r\n    //     chatActivo:null, // UID del usuario ql que yo quiero enviar mensajes\r\n    //     usuarios: [],   // s Todos los usuarios de la base de datos\r\n    //     mensajes : [], // El chat selecionado\r\n    // }\r\n\r\n\r\n    switch (action.type) {\r\n        case types.usuariosCargados:\r\n            \r\n            return {\r\n                ...state,\r\n                usuarios: [...action.payload]\r\n            }\r\n        case types.activarChat:\r\n            \r\n            if( state.chatActivo === action.payload ) return state;\r\n\r\n            return {\r\n                ...state,\r\n                chatActivo : action.payload,\r\n                mensajes : []\r\n            }\r\n\r\n        case types.nuevoMensaje:\r\n            if( state.chatActivo  === action.payload.de || state.chatActivo  === action.payload.para ){\r\n\r\n                return {\r\n                    ...state,\r\n                    mensajes: [...state.mensajes, action.payload]\r\n                }\r\n            }else{\r\n                \r\n                return state\r\n\r\n            }\r\n        case types.cargarMnesaje:\r\n        \r\n            return {\r\n                ...state,\r\n                mensajes: [...action.payload]\r\n            }\r\n        case types.cerrarSession:\r\n    \r\n            return {\r\n                uid:'',\r\n                chatActivo:null, \r\n                usuarios: [],   \r\n                mensajes : [], \r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import React, { createContext, useReducer } from 'react'\r\nimport { chatReducer } from './chatReducer';\r\n\r\nexport const ChatContext = createContext();\r\n\r\nconst initialState = {\r\n    uid:'',\r\n    chatActivo:null, // UID del usuario ql que yo quiero enviar mensajes\r\n    usuarios: [],   // s Todos los usuarios de la base de datos\r\n    mensajes : [], // El chat selecionado\r\n}\r\n\r\n\r\nexport const ChatProvider = ({ children }) => {\r\n\r\n    const [chatState, dispatch] = useReducer(chatReducer, initialState)\r\n\r\n\r\n    return (\r\n        <ChatContext.Provider\r\n            value = {{\r\n               chatState,\r\n               dispatch\r\n            }}\r\n        >\r\n            {children}\r\n        </ChatContext.Provider>\r\n    )\r\n}\r\n\r\n","\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nexport const fetchSinToken = async( endpoint, data, method=\"GET\" ) => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if( method ===\"GET\" ){\r\n        const resp = await fetch(url);\r\n        return await resp.json();\r\n    }else{\r\n\r\n        const resp = await fetch( url,{\r\n            method,\r\n            headers:{\r\n                'Content-type':'application/json'\r\n            },\r\n            body : JSON.stringify(data)\r\n        })\r\n\r\n        return await resp.json();\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport const fetchConToken = async( endpoint, data, method=\"GET\" ) => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    const token  = localStorage.getItem('token') || \"\";\r\n//! CunANDO EL SERVIDOR ESTA CAIDO HAY ERROR EN ESTE FETCH, QUE HACEMOS??\r\n    if( method ===\"GET\" ){\r\n        const resp = await fetch(url,{\r\n            headers:{\r\n                \"x-token\": token\r\n            }\r\n        });\r\n        return await resp.json();\r\n    }else{\r\n\r\n        const resp = await fetch( url,{\r\n            method,\r\n            headers:{\r\n                'Content-type':'application/json'\r\n            },\r\n            body : JSON.stringify(data)\r\n        })\r\n\r\n        return await resp.json();\r\n\r\n    }\r\n\r\n\r\n\r\n}","import React,{ createContext, useCallback, useContext, useState } from 'react'\r\nimport { ChatContext } from '../context/chat/ChatContext';\r\nimport { fetchConToken, fetchSinToken } from '../helpers/fetch';\r\nimport { types } from '../types/types';\r\n\r\n\r\nexport const AuthContext = createContext();\r\n\r\n\r\nconst initialState = {\r\n    uid: null,\r\n    checking : true,\r\n    logged: false,\r\n    name:null,\r\n    email: null,\r\n}\r\n\r\n\r\nexport const AuthProvider = ({children}) => {\r\n\r\n    const [auth, setAuth] = useState(initialState)\r\n\r\n    \r\n    const {dispatch} = useContext(ChatContext)\r\n\r\n    const login = async ( email, password ) => {\r\n\r\n        const resp = await fetchSinToken(\"login\", { email, password }, \"POST\");\r\n\r\n\r\n        if( resp.ok ){\r\n            localStorage.setItem('token', resp.token);\r\n            const { usuarioDB } = resp;\r\n            setAuth({\r\n                uid: usuarioDB?.uid,\r\n                checking : false,\r\n                logged: true,\r\n                name: usuarioDB.nombre,\r\n                email: usuarioDB.email,\r\n            })\r\n\r\n            console.log(\"AUTENTICADO\")\r\n\r\n        }\r\n        return resp.ok;\r\n\r\n    }\r\n\r\n    const register = async (nombre, email, password ) => {\r\n\r\n        const resp = await fetchSinToken(\"login/new\", {nombre, email, password},\"POST\");\r\n        console.log(resp);\r\n\r\n        if( resp.ok ){\r\n            localStorage.setItem('token', resp.token);\r\n            const { usuario } = resp;\r\n            setAuth({\r\n                uid: usuario?.uid,\r\n                checking : false,\r\n                logged: true,\r\n                name: usuario.nombre,\r\n                email: usuario.email,\r\n            })\r\n\r\n            console.log(\"AUTENTICADO\")\r\n            return true;\r\n        }   \r\n        return resp.msg;\r\n\r\n    }\r\n\r\n    const verificaToken = useCallback(\r\n        async () => {\r\n            \r\n            const token = localStorage.getItem(\"token\");\r\n\r\n            if( !token ){\r\n\r\n                setAuth({\r\n                    uid: null,\r\n                    checking : false,\r\n                    logged: false,\r\n                    name:null,\r\n                    email: null,\r\n                })\r\n\r\n                return false;\r\n            }\r\n\r\n            const resp = await fetchConToken('login');\r\n\r\n            if( resp.ok ){\r\n                localStorage.setItem('token', resp.token);\r\n                const { usuario } = resp;\r\n                setAuth({\r\n                    uid: usuario?.uid,\r\n                    checking : false,\r\n                    logged: true,\r\n                    name: usuario?.nombre,\r\n                    email: usuario?.email,\r\n                })\r\n    \r\n                console.log(\"AUTENTICADO\")\r\n                return true;\r\n            }else{\r\n                setAuth({\r\n                    uid: null,\r\n                    checking : false,\r\n                    logged: false,\r\n                    name:null,\r\n                    email: null,\r\n                })\r\n                return false;\r\n            } \r\n        },\r\n        [],\r\n    )\r\n\r\n    const logout = () =>{\r\n        \r\n        localStorage.removeItem('token');\r\n        dispatch({\r\n            type:types.cerrarSession\r\n        })\r\n        setAuth({\r\n            checking : false,\r\n            logged: false,\r\n        })\r\n\r\n\r\n    }\r\n\r\n    return (\r\n       <AuthContext.Provider \r\n        value={{\r\n            auth,\r\n            setAuth,\r\n            login,\r\n            register,\r\n            verificaToken,\r\n            logout,\r\n        \r\n        }}\r\n       >\r\n           {children}\r\n       </AuthContext.Provider>  \r\n    )\r\n}\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { createContext } from 'react';\r\n\r\nimport { AuthContext } from '../auth/AuthContext';\r\nimport { ChatContext } from './chat/ChatContext';\r\nimport { useSocket } from '../hooks/useSocket'\r\n\r\nimport { types } from '../types/types';\r\nimport { scrollToBottomAnimated } from '../helpers/scrollToBottom';\r\n\r\nexport const SocketContext = createContext();\r\n\r\n\r\nexport const SocketProvider = ({ children }) => {\r\n\r\n    const { socket, online, conectarSocket, desconectarSocket } = useSocket('http://localhost:4000');\r\n    const {auth} = useContext(AuthContext)\r\n    const {dispatch} = useContext(ChatContext)\r\n\r\n\r\n    useEffect(() => {\r\n        if( auth.logged ){\r\n            conectarSocket();\r\n        }\r\n    }, [auth,conectarSocket]);\r\n   \r\n    useEffect(() => {\r\n        if( !auth.logged ){\r\n            desconectarSocket();\r\n        }\r\n    }, [auth,desconectarSocket])\r\n\r\n    //Escuchar los cambios en los usuarios conectados\r\n    useEffect(() => {\r\n\r\n        socket?.on(\"lista-usuarios\", ( usuarios )=>{\r\n            dispatch({\r\n                type:types.usuariosCargados,\r\n                payload:usuarios\r\n            })\r\n        })\r\n\r\n\r\n    }, [socket,dispatch])\r\n\r\n    useEffect(() => {\r\n        \r\n        socket?.on('mensaje-personal', (mensaje) => {\r\n            //todo: Dispatch de una accion\r\n\r\n            dispatch({\r\n                type:types.nuevoMensaje,\r\n                payload: mensaje\r\n            })\r\n\r\n            //Todo: Moveer el scroll al final\r\n\r\n            scrollToBottomAnimated('mensajes')\r\n\r\n        })\r\n        \r\n    }, [socket, dispatch])\r\n\r\n\r\n\r\n    return (\r\n        <SocketContext.Provider value={{ socket, online }}>\r\n            { children }\r\n        </SocketContext.Provider>\r\n    )\r\n}","import { useCallback, useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\n\r\nexport const useSocket = ( serverPath ) => {\r\n    \r\n    const [socket, setSocket] = useState(null)\r\n    const [ online, setOnline ] = useState(false);\r\n\r\n    const conectarSocket = useCallback(\r\n        () => { \r\n\r\n            const token = localStorage.getItem('token');\r\n\r\n\r\n\r\n            const socketTemp = io.connect( serverPath, {\r\n                transports: ['websocket'],\r\n                autoConnect: true,\r\n                forceNew : true,\r\n                query: {\r\n                    \"x-token\": token\r\n                }\r\n            } );\r\n\r\n            setSocket( socketTemp );\r\n\r\n        },[serverPath])\r\n\r\n    const desconectarSocket = useCallback ( ()=>{\r\n\r\n        socket?.disconnect();\r\n\r\n    },[socket] );\r\n\r\n\r\n    useEffect(() => {\r\n        setOnline( socket?.connected );\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket?.on('connect', () => setOnline( true ));\r\n    }, [ socket ])\r\n\r\n    useEffect(() => {\r\n        socket?.on('disconnect', () => setOnline( false ));\r\n    }, [ socket ])\r\n\r\n    return {\r\n        socket,\r\n        online,\r\n        conectarSocket,\r\n        desconectarSocket\r\n    }\r\n}","import { animateScroll }  from 'react-scroll'\r\n\r\nexport const scrollToBottom = (id) => {\r\n   \r\n    animateScroll.scrollToBottom({\r\n        containerId: id,\r\n        duration :0\r\n    });\r\n\r\n}\r\n\r\n\r\nexport const scrollToBottomAnimated = (id) => {\r\n   \r\n    animateScroll.scrollToBottom({\r\n        containerId: id,\r\n        duration :250\r\n    });\r\n\r\n}","import React from 'react'\r\n\r\nexport const ChatSelect = () => {\r\n    return (\r\n        <div className=\"middle-screen\" >\r\n            <div className=\"alert-info\" >\r\n                <hr />\r\n                <h3>Seleccione una persona</h3>\r\n                <span>\r\n                    Para comenzar una conversacion\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AuthContext } from '../auth/AuthContext'\r\n\r\nexport const SearchBox = () => {\r\n\r\n    const {auth,logout} = useContext(AuthContext)\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"headind_srch\">\r\n            <div className=\"recent_heading mt-2\">\r\n                <h4>{ auth.name }</h4>\r\n            </div>\r\n            <div className=\"srch_bar\">\r\n                <div className=\"stylish-input-group\">\r\n                    <button \r\n                        className=\"btn text-danger\"\r\n                        onClick={ logout }\r\n                        >\r\n                        Salir\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { scrollToBottom } from './../helpers/scrollToBottom';\r\nimport { ChatContext } from '../context/chat/ChatContext'\r\nimport { types } from '../types/types';\r\n\r\nimport {fetchConToken} from \"./../helpers/fetch\"\r\n\r\nexport const SideBarChatItem = ({usuario}) => {\r\n\r\n    const { chatState ,dispatch} = useContext(ChatContext)\r\n    const { chatActivo } = chatState;\r\n\r\n\r\n    const handleOnClick = async () =>{\r\n\r\n        dispatch({\r\n            type: types.activarChat,\r\n             payload: usuario?.uid\r\n        })\r\n        //todo: Cargar los mensajes\r\n\r\n        const resp = await fetchConToken(`mensajes/${usuario.uid}`);\r\n        dispatch({\r\n            type:types.cargarMnesaje,\r\n            payload: resp.mensajes\r\n        })\r\n\r\n        //todo: MOver scroll\r\n        scrollToBottom(\"mensajes\")\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className={ `chat_list ${ (usuario?.uid===chatActivo) && 'active_chat' }`}\r\n            onClick={ handleOnClick }\r\n            >\r\n            <div className=\"chat_people\">\r\n                <div className=\"chat_img\">\r\n                    <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" />\r\n                </div>\r\n                <div className=\"chat_ib\">\r\n                    <h5>{usuario?.nombre}</h5>\r\n\r\n                    {\r\n                        (usuario?.online)\r\n                        ? <span className=\"text-success\">Online</span>\r\n                        : <span className=\"text-danger\">Offline</span>\r\n                    }\r\n\r\n                    \r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AuthContext } from '../auth/AuthContext'\r\nimport { ChatContext } from '../context/chat/ChatContext'\r\nimport { SideBarChatItem } from './SideBarChatItem'\r\n\r\nexport const SideBar = () => {\r\n\r\n\r\n    const {chatState} = useContext(ChatContext)\r\n    \r\n    const { auth } = useContext( AuthContext );\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"inbox_chat\">\r\n\r\n         \r\n            {\r\n                chatState.usuarios\r\n                .filter( user => user?.uid !==  auth.uid )\r\n                .map( (usuario)=>\r\n                <SideBarChatItem \r\n                key={usuario.uid} \r\n                usuario = { usuario }\r\n                />\r\n                )\r\n            }\r\n\r\n\r\n            {/* <!-- Espacio extra para scroll --> */}\r\n            <div className=\"extra_space\"></div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { SearchBox } from './SearchBox'\r\nimport { SideBar } from './SideBar'\r\n\r\nexport const InboxPeople = () => {\r\n    return (\r\n\r\n        <div className=\"inbox_people\">\r\n\r\n           <SearchBox/>\r\n\r\n           <SideBar/>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n","import moment from \"moment\"\r\n\r\n\r\n\r\nexport const horaMes = (fecha) => {\r\n    \r\n    const hoyMes  = moment( fecha );\r\n\r\n    return hoyMes.format('HH:m a | MMMM Do')\r\n\r\n}\r\n","import React from 'react'\r\nimport { horaMes } from '../helpers/horaMes'\r\n\r\nexport const IncomingMessage = ({msg}) => {\r\n\r\n    const horaEnvio = horaMes( msg.createdAt  )\r\n\r\n    return (\r\n        <div className=\"incoming_msg\">\r\n            <div className=\"incoming_msg_img\">\r\n                <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" />\r\n            </div>\r\n            <div className=\"received_msg\">\r\n                <div className=\"received_withd_msg\">\r\n                    <p>{msg.mensaje}</p>\r\n                    <span className=\"time_date\">{horaEnvio}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { horaMes } from '../helpers/horaMes'\r\n\r\nexport const OutgoingMessage = ({msg}) => {\r\n\r\n    const horaEnvio = horaMes( msg.createdAt  )\r\n\r\n    return (\r\n        <div className=\"outgoing_msg\">\r\n            <div className=\"sent_msg\">\r\n                <p>{msg.mensaje}</p>\r\n                <span className=\"time_date\">{horaEnvio}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { AuthContext } from '../auth/AuthContext';\r\nimport { ChatContext } from '../context/chat/ChatContext';\r\nimport { SocketContext } from '../context/SocketContext';\r\n\r\nexport const SendMessage = () => {\r\n\r\n    const [mensaje, setMensaje] = useState(\"\");\r\n    const {socket} = useContext(SocketContext)\r\n    const {auth} = useContext(AuthContext)\r\n    const {chatState} = useContext(ChatContext)\r\n\r\n\r\n    const handleOnChange = ( {target} )=>{\r\n\r\n        setMensaje(target.value)\r\n\r\n    }\r\n\r\n    const handleOnSubmit = (e)=>{\r\n\r\n        e.preventDefault();\r\n\r\n        if( mensaje.length ===0 ){\r\n            return;\r\n        }\r\n\r\n        setMensaje(\"\");\r\n        \r\n         // Todo Emitir un mensaje de sockets para enviar el mensaje\r\n        // {\r\n        //     de: // UID del usuario enviando el mensaje\r\n        //     para: //UID del usuario que recibe el mensaje\r\n        //     mensaje: // lo que queremos enviar\r\n        // }\r\n\r\n        socket.emit('mensaje-personal',{\r\n            de:auth.uid,\r\n            para: chatState.chatActivo,\r\n            mensaje\r\n        })\r\n\r\n\r\n        //todo hacer el dispatch de el mensaje...\r\n    }\r\n\r\n    return (\r\n        <form  onSubmit={ handleOnSubmit } action=\"\">\r\n            <div className=\"type_msg row\">\r\n                <div className=\"input_msg_write col-sm-9\">\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"write_msg\" \r\n                        placeholder=\"Mensaje...\"\r\n                        value= { mensaje } \r\n                        onChange = { handleOnChange }\r\n                    />\r\n                </div>\r\n                <div className=\"col-sm-3 text-center\">\r\n                    <button className=\"msg_send_btn mt-3\" type=\"submit\">\r\n                        enviar\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AuthContext } from '../auth/AuthContext'\r\nimport { ChatContext } from '../context/chat/ChatContext'\r\nimport { IncomingMessage } from './IncomingMessage'\r\nimport { OutgoingMessage } from './OutgoingMessage'\r\nimport { SendMessage } from './SendMessage'\r\n\r\nexport const Messages = () => {\r\n\r\n\r\n    const {chatState} = useContext(ChatContext)\r\n\r\n    const {auth} = useContext(AuthContext)\r\n\r\n    return (\r\n        <div className=\"mesgs\">\r\n\r\n            {/* <!-- Historia inicio --> */}\r\n            <div \r\n                className=\"msg_history\"\r\n                id=\"mensajes\"\r\n                >\r\n\r\n                {\r\n                    chatState.mensajes.map( ( msg )=>(\r\n                        ( msg.para === auth.uid )\r\n                            ?  <IncomingMessage key={msg._id} msg={msg} />\r\n                            : <OutgoingMessage key={msg._id}  msg={msg} />\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n            {/* <!-- Historia Fin --> */}\r\n\r\n           <SendMessage/>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { ChatSelect } from '../components/ChatSelect';\r\nimport { InboxPeople } from '../components/InboxPeople';\r\nimport { Messages } from '../components/Messages';\r\nimport { ChatContext } from '../context/chat/ChatContext';\r\n\r\nimport '../css/chat.css'\r\n\r\nexport const ChatPage = () => {\r\n\r\n    const { chatState } = useContext(ChatContext)\r\n\r\n\r\n    return (\r\n        <div className=\"messaging\">\r\n            <div className=\"inbox_msg\">\r\n\r\n                <InboxPeople />\r\n\r\n                {\r\n                    (chatState.chatActivo)\r\n                        ? <Messages />\r\n                        : <ChatSelect />\r\n                }\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { AuthContext } from '../auth/AuthContext'\r\n\r\nimport Swal from \"sweetalert2\"\r\n\r\n\r\nexport const LoginPage = () => {\r\n\r\n    const {login} = useContext(AuthContext)\r\n\r\n\r\n    const [form, setForm] = useState({\r\n        email:\"\",\r\n        password:\"\",\r\n        rememberme: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        \r\n        const email = localStorage.getItem(\"email\");\r\n        if( email ){\r\n\r\n            setForm((form) =>({\r\n                ...form,\r\n                email,\r\n                rememberme:true\r\n            }))\r\n\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    const handleOnChange = ({target})=>{\r\n\r\n        const { name, value } = target;\r\n\r\n       setForm({\r\n           ...form,\r\n           [name]: value\r\n       })\r\n    }\r\n\r\n    const handleToggleCheck = ()=>{\r\n\r\n        setForm({\r\n            ...form,\r\n            rememberme : !form.rememberme\r\n        })\r\n\r\n    }\r\n\r\n    const handelonSubmit = async (ev) =>{\r\n\r\n        ev.preventDefault();\r\n\r\n        if( form.rememberme ){\r\n            localStorage.setItem(\"email\", form.email)\r\n        }else{\r\n            localStorage.removeItem('email');\r\n        }\r\n\r\n        // TODO: llamar el backend\r\n        const { email, password} = form;\r\n        const ok = await login(email, password);\r\n        if( !ok ){\r\n            Swal.fire(\"Error\", \"Verifique el usuario y contraseña\", \"error\");\r\n        }\r\n\r\n    }\r\n\r\n    const handleTodoOk = () =>{\r\n\r\n        return ( form.email.length > 0 && form.password.length >0 ) ? true : false\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <form \r\n            className=\"login100-form validate-form flex-sb flex-w\"\r\n            onSubmit={ handelonSubmit }\r\n            >\r\n            <span className=\"login100-form-title mb-3\">\r\n                Chat - Ingreso\r\n            </span>\r\n\r\n            <div className=\"wrap-input100 validate-input mb-3\">\r\n                <input \r\n                    className=\"input100\" \r\n                    type=\"email\" name=\"email\" \r\n                    placeholder=\"Email\" \r\n                    value = {form.email }\r\n                    onChange = {handleOnChange}\r\n                />\r\n                <span className=\"focus-input100\"></span>\r\n            </div>\r\n\r\n            <div className=\"wrap-input100 validate-input mb-3\">\r\n                <input \r\n                    className=\"input100\" \r\n                    type=\"password\" \r\n                    name=\"password\" \r\n                    placeholder=\"Password\" \r\n                    value = {form.password }\r\n                    onChange = {handleOnChange}\r\n                    />\r\n                <span className=\"focus-input100\"></span>\r\n            </div>\r\n\r\n            <div className=\"row mb-3\">\r\n                <div \r\n                \r\n                    className=\"col\"\r\n                    onClick = { handleToggleCheck }\r\n                >\r\n                    <input \r\n                        className=\"input-checkbox100\" \r\n                        id=\"ckb1\" \r\n                        type=\"checkbox\" \r\n                        name=\"rememberme\" \r\n                        checked = {form.rememberme }\r\n                        readOnly\r\n                        />\r\n                    <label className=\"label-checkbox100\">\r\n                        Recordarme\r\n                    </label>\r\n                </div>\r\n\r\n                <div className=\"col text-right\">\r\n                    <Link to=\"/auth/register\" className=\"txt1\">\r\n                        Nueva cuenta?\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container-login100-form-btn m-t-17\">\r\n                <button \r\n                    className=\"login100-form-btn\"\r\n                    type=\"submit\"\r\n                    disabled={ !handleTodoOk() }\r\n                    >\r\n                    Ingresar\r\n                </button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Swal from 'sweetalert2';\r\nimport { AuthContext } from '../auth/AuthContext'\r\n\r\nexport const RegisterPage = () => {\r\n\r\n    const { register } = useContext(AuthContext);\r\n\r\n    const [form, setForm] = useState({\r\n        email:\"\",\r\n        password:\"\",\r\n        nombre:\"\",\r\n    })\r\n\r\n    const handleOnChange =({target})=>{\r\n\r\n        const { name, value } = target;\r\n\r\n        setForm({\r\n            ...form,\r\n            [name]:value\r\n        })\r\n\r\n    }\r\n\r\n    const handleOnSumbit = async ( e ) =>{\r\n\r\n        e.preventDefault();\r\n        const { nombre, email, password } = form;\r\n        const  msg  =  await register( nombre, email, password)\r\n        console.log(msg);\r\n        if( msg !== true ){\r\n            Swal.fire(\"Error\", msg, \"error\");\r\n        }\r\n    }\r\n\r\n\r\n    const handleTodoOk = () =>{\r\n\r\n        return ( form.email.length > 0 && form.password.length >0  && form.nombre.length>0) ? true : false\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <form \r\n            className=\"login100-form validate-form flex-sb flex-w\"\r\n            onSubmit={handleOnSumbit}\r\n            >\r\n            <span className=\"login100-form-title mb-3\">\r\n                Chat - Registro\r\n            </span>\r\n\r\n            <div className=\"wrap-input100 validate-input mb-3\">\r\n                <input \r\n                    className=\"input100\" \r\n                    type=\"text\" \r\n                    name=\"nombre\" \r\n                    placeholder=\"Nombre\" \r\n                    value={ form.nombre }\r\n                    onChange={ handleOnChange }\r\n                    />\r\n                <span className=\"focus-input100\"></span>\r\n            </div>\r\n\r\n\r\n            <div className=\"wrap-input100 validate-input mb-3\">\r\n                <input \r\n                    className=\"input100\" \r\n                    type=\"email\" \r\n                    name=\"email\" \r\n                    placeholder=\"Email\" \r\n                    value={ form.email }\r\n                    onChange={ handleOnChange }\r\n                    />\r\n                <span className=\"focus-input100\"></span>\r\n            </div>\r\n\r\n\r\n            <div className=\"wrap-input100 validate-input mb-3\">\r\n                <input \r\n                    className=\"input100\" \r\n                    type=\"password\" \r\n                    name=\"password\" \r\n                    placeholder=\"Password\" \r\n                    value={ form.password }\r\n                    onChange={ handleOnChange } \r\n                    />\r\n                <span className=\"focus-input100\"></span>\r\n            </div>\r\n\r\n            <div className=\"row mb-3\">\r\n                <div className=\"col text-right\">\r\n                    <Link to=\"/auth/login\" className=\"txt1\">\r\n                        Ya tienes cuenta?\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container-login100-form-btn m-t-17\">\r\n                <button \r\n                    className=\"login100-form-btn\"\r\n                    type=\"submit\"\r\n                    disabled={!handleTodoOk()}\r\n                    >\r\n                    Crear cuenta\r\n                </button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { LoginPage } from \"../pages/LoginPage\";\r\nimport { RegisterPage } from \"../pages/RegisterPage\";\r\n\r\nimport \"../css/login-register.css\";\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"limiter\">\r\n            <div className=\"container-login100\">\r\n                <div className=\"wrap-login100 p-t-50 p-b-90\">\r\n                    <Switch>\r\n                        <Route exact path=\"/auth/login\" component={LoginPage} />\r\n                        <Route exact path=\"/auth/register\" component={RegisterPage} />\r\n\r\n                        <Redirect to=\"/auth/login\" />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react'\r\nimport { Route,Redirect } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n\r\n   isAuthenticated,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest} \r\n            component={ (props) => (\r\n                (isAuthenticated)\r\n                ?<Component  {...props} />\r\n                : <Redirect  to=\"/auth/login\" />\r\n            ) }\r\n        >\r\n            \r\n        </Route>\r\n    )\r\n}","\r\nimport React from 'react';\r\nimport { Route ,Redirect} from 'react-router-dom';\r\n\r\nexport const PublicRouter = ({\r\n    isAuthenticated,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest} \r\n            component={ (props) => (\r\n                (!isAuthenticated)\r\n                ?<Component  {...props} />\r\n                : <Redirect  to=\"/\" />\r\n            ) }\r\n        >\r\n            \r\n        </Route>\r\n    )\r\n}\r\n\r\n","import React, { useContext, useEffect } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { AuthContext } from '../auth/AuthContext';\r\n\r\nimport { ChatPage } from '../pages/ChatPage';\r\n\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRouter } from './PublicRouter';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const {auth, verificaToken} = useContext(AuthContext)\r\n    // console.log(auth)\r\n    useEffect(() => {\r\n      verificaToken();\r\n    }, [verificaToken])\r\n\r\n\r\n    if( auth.checking ){\r\n      return <h1>Espere por favor...</h1>\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Router>\r\n      <div>\r\n    \r\n        <Switch>\r\n\r\n          {/* <Route path=\"/auth\" component={ AuthRouter } /> */}\r\n          {/* <Route exact path=\"/\"  component={ ChatPage } /> */}\r\n          <PublicRouter isAuthenticated={auth.logged}  path=\"/auth\" component ={ AuthRouter } />\r\n          <PrivateRoute isAuthenticated={auth.logged}  path=\"/\" component ={ ChatPage } />\r\n\r\n          <Redirect to=\"/\" />\r\n\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { AuthProvider } from './auth/AuthContext';\r\nimport { ChatProvider } from './context/chat/ChatContext';\r\nimport { SocketProvider } from './context/SocketContext';\r\nimport { AppRouter } from './router/AppRouter';\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nmoment.locale('es');\r\n\r\nexport const ChatApp = () => {\r\n    return (\r\n            <ChatProvider>\r\n                <AuthProvider>\r\n                    <SocketProvider>\r\n                        <AppRouter/>\r\n                    </SocketProvider>\r\n                </AuthProvider>\r\n            </ChatProvider>\r\n    \r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChatApp } from './ChatApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n\n   <ChatApp />,\n\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}